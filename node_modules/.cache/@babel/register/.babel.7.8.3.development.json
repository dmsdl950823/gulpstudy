{
  "{\"sourceRoot\":\"/supergulp\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/supergulp\",\"filename\":\"/supergulp/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/supergulp\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/supergulp",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/supergulp",
      "filename": "/supergulp/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/supergulp",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/supergulp/gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/supergulp/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/supergulp",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deploy = exports.dev = exports.build = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _gulpPug = _interopRequireDefault(require(\"gulp-pug\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _gulpWebserver = _interopRequireDefault(require(\"gulp-webserver\"));\n\nvar _gulpImage = _interopRequireDefault(require(\"gulp-image\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpAutoprefixer = _interopRequireDefault(require(\"gulp-autoprefixer\"));\n\nvar _gulpCsso = _interopRequireDefault(require(\"gulp-csso\"));\n\nvar _gulpBro = _interopRequireDefault(require(\"gulp-bro\"));\n\nvar _babelify = _interopRequireDefault(require(\"babelify\"));\n\nvar _gulpGhPages = _interopRequireDefault(require(\"gulp-gh-pages\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n// import 시키기\n// const gulp = require(\"gulp\");\n// gulpfile.js 는 js 언어를 이해하지 못하므로\n// gulpfile.babel.js 로 변경\n// 내가원하는대로 import 할 수 있음\n_gulpSass[\"default\"].compiler = require(\"node-sass\");\nvar routes = {\n  pug: {\n    watch: \"src/**/*.pug\",\n    // 폴더안의 .pug 파일 모두 관찰\n    src: \"src/*.pug\",\n    // src안의 가장 위 pug 파일을 이용할것.\n    dest: \"build\" // destination 폴더 안에 컴파일\n\n  },\n  img: {\n    src: \"src/img/*\",\n    // img 폴더의 모든 것\n    dest: \"build/img\"\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\"\n  },\n  js: {\n    watch: \"src/js/**/*.js\",\n    src: \"src/js/main.js\",\n    dest: \"build/js\"\n  }\n}; // Task 란:\n// gulp는 task와 함께 동작함\n// pug 파일을 html로 변환후 다른 폴더에 입력\n// scss -> css 파일로 변환 -> 최소화, 폴더에 입력\n\nvar pug = function pug() {\n  return (// API는 홈페이지에서 확인\n    _gulp[\"default\"].src(routes.pug.src).pipe((0, _gulpPug[\"default\"])()) // pipe: 연결\n    .pipe(_gulp[\"default\"].dest(routes.pug.dest))\n  );\n}; // dest: destination - 어디에 저장할 것인가\n// build 를 전부 비우고 재시작\n// $ npm add del\n\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"build\"]);\n}; // webserver로 열기\n\n\nvar webserver = function webserver() {\n  return _gulp[\"default\"].src(\"build\").pipe((0, _gulpWebserver[\"default\"])({\n    livereload: true,\n    open: true\n  }));\n}; // image 컴파일\n\n\nvar img = function img() {\n  return _gulp[\"default\"].src(routes.img.src).pipe((0, _gulpImage[\"default\"])()) // image from 'gulp-image'\n  .pipe(_gulp[\"default\"].dest(routes.img.dest));\n}; // scss -> css\n\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(routes.scss.src).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)) // sass만의 에러출력후 css 생성중단\n  .pipe((0, _gulpAutoprefixer[\"default\"])({}) // 지정한 browser에 맞추어 css 변환, package.json에 입력 -  npm 홈페이지에 정보O\n  ).pipe((0, _gulpCsso[\"default\"])()).pipe(_gulp[\"default\"].dest(routes.scss.dest));\n};\n\nvar js = function js() {\n  return _gulp[\"default\"].src(routes.js.src).pipe((0, _gulpBro[\"default\"])({\n    transform: [_babelify[\"default\"].configure({\n      presets: [\"@babel/preset-env\"]\n    }), [\"uglifyify\", {\n      global: true\n    }]]\n  })).pipe(_gulp[\"default\"].dest(routes.js.dest));\n}; // 배포\n\n\nvar deployment = function deployment() {\n  return _gulp[\"default\"].src(\"build/**/*\").pipe((0, _gulpGhPages[\"default\"])());\n}; // gulp-watch : 변화하는 파일을 확인후, callback function을 실행함\n\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(routes.pug.watch, pug);\n\n  _gulp[\"default\"].watch(routes.img.src, img); // 이미지 추적은 시간이 걸릴 수 있음\n\n\n  _gulp[\"default\"].watch(routes.scss.watch, styles);\n\n  _gulp[\"default\"].watch(routes.js.watch, js);\n}; // build폴더를 먼저 비우기, image 최적화\n\n\nvar prepare = _gulp[\"default\"].series([clean, img]);\n\nvar assets = _gulp[\"default\"].series([pug, styles, js]);\n\nvar live = _gulp[\"default\"].series([webserver, watch]); // server를 확인한 후, 변화 관찰\n// const live = gulp.parallel([webserver, watch]); // pararell: 동시에 server를 확인하면서 변화 관찰\n// export 는 package.json 에서 쓸 command만 해주면 됨\n// prepare후 assets 실행\n\n\nvar build = _gulp[\"default\"].series([prepare, assets]);\n\nexports.build = build;\n\nvar dev = _gulp[\"default\"].series([prepare, assets, live]); // package.json의 \"scripts\"에서 \"dev\" Task가 dev로 설정되어있음.\n// export const dev = () => console.log(\"I will dev\");\n// $ gulp dev 를 커맨드시키면 출력 시작\n// $ gulp     는 커맨드 출력 X\n\n\nexports.dev = dev;\n\nvar deploy = _gulp[\"default\"].series([build, deployment]);\n\nexports.deploy = deploy;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "sass",
        "compiler",
        "require",
        "routes",
        "pug",
        "watch",
        "src",
        "dest",
        "img",
        "scss",
        "js",
        "gulp",
        "pipe",
        "clean",
        "webserver",
        "livereload",
        "open",
        "styles",
        "on",
        "logError",
        "transform",
        "babelify",
        "configure",
        "presets",
        "global",
        "deployment",
        "prepare",
        "series",
        "assets",
        "live",
        "build",
        "dev",
        "deploy"
      ],
      "mappings": "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",
      "sourceRoot": "/supergulp",
      "sourcesContent": [
        "// import 시키기\n// const gulp = require(\"gulp\");\n\n// gulpfile.js 는 js 언어를 이해하지 못하므로\n// gulpfile.babel.js 로 변경\n\n// 내가원하는대로 import 할 수 있음\nimport gulp from \"gulp\";\nimport gpug from \"gulp-pug\";\nimport del from \"del\";\nimport ws from \"gulp-webserver\";\nimport image from \"gulp-image\";\nimport sass from \"gulp-sass\";\nimport autop from \"gulp-autoprefixer\";\nimport miniCSS from \"gulp-csso\";\nimport bro from \"gulp-bro\";\nimport babelify from \"babelify\";\nimport ghPages from \"gulp-gh-pages\";\n\nsass.compiler = require(\"node-sass\");\n\nconst routes = {\n  pug: {\n    watch: \"src/**/*.pug\", // 폴더안의 .pug 파일 모두 관찰\n    src: \"src/*.pug\", // src안의 가장 위 pug 파일을 이용할것.\n    dest: \"build\", // destination 폴더 안에 컴파일\n  },\n  img: {\n    src: \"src/img/*\", // img 폴더의 모든 것\n    dest: \"build/img\",\n  },\n  scss: {\n    watch: \"src/scss/**/*.scss\",\n    src: \"src/scss/style.scss\",\n    dest: \"build/css\",\n  },\n  js: {\n    watch: \"src/js/**/*.js\",\n    src: \"src/js/main.js\",\n    dest: \"build/js\",\n  },\n};\n\n// Task 란:\n// gulp는 task와 함께 동작함\n// pug 파일을 html로 변환후 다른 폴더에 입력\n// scss -> css 파일로 변환 -> 최소화, 폴더에 입력\n\nconst pug = () =>\n  // API는 홈페이지에서 확인\n  gulp\n    .src(routes.pug.src)\n    .pipe(gpug()) // pipe: 연결\n    .pipe(gulp.dest(routes.pug.dest)); // dest: destination - 어디에 저장할 것인가\n\n// build 를 전부 비우고 재시작\n// $ npm add del\nconst clean = () => del([\"build\"]);\n\n// webserver로 열기\nconst webserver = () =>\n  gulp.src(\"build\").pipe(ws({ livereload: true, open: true }));\n\n// image 컴파일\nconst img = () =>\n  gulp\n    .src(routes.img.src)\n    .pipe(image()) // image from 'gulp-image'\n    .pipe(gulp.dest(routes.img.dest));\n\n// scss -> css\nconst styles = () =>\n  gulp\n    .src(routes.scss.src)\n    .pipe(sass().on(\"error\", sass.logError)) // sass만의 에러출력후 css 생성중단\n    .pipe(\n      autop({}) // 지정한 browser에 맞추어 css 변환, package.json에 입력 -  npm 홈페이지에 정보O\n    )\n    .pipe(miniCSS())\n    .pipe(gulp.dest(routes.scss.dest));\n\nconst js = () =>\n  gulp\n    .src(routes.js.src)\n    .pipe(\n      bro({\n        transform: [\n          babelify.configure({ presets: [\"@babel/preset-env\"] }),\n          [\"uglifyify\", { global: true }],\n        ],\n      })\n    )\n    .pipe(gulp.dest(routes.js.dest));\n\n// 배포\nconst deployment = () => gulp.src(\"build/**/*\").pipe(ghPages());\n\n// gulp-watch : 변화하는 파일을 확인후, callback function을 실행함\nconst watch = () => {\n  gulp.watch(routes.pug.watch, pug);\n  gulp.watch(routes.img.src, img); // 이미지 추적은 시간이 걸릴 수 있음\n  gulp.watch(routes.scss.watch, styles);\n  gulp.watch(routes.js.watch, js);\n};\n\n// build폴더를 먼저 비우기, image 최적화\nconst prepare = gulp.series([clean, img]);\n\nconst assets = gulp.series([pug, styles, js]);\n\nconst live = gulp.series([webserver, watch]); // server를 확인한 후, 변화 관찰\n// const live = gulp.parallel([webserver, watch]); // pararell: 동시에 server를 확인하면서 변화 관찰\n\n// export 는 package.json 에서 쓸 command만 해주면 됨\n// prepare후 assets 실행\nexport const build = gulp.series([prepare, assets]);\nexport const dev = gulp.series([prepare, assets, live]);\n// package.json의 \"scripts\"에서 \"dev\" Task가 dev로 설정되어있음.\n// export const dev = () => console.log(\"I will dev\");\n// $ gulp dev 를 커맨드시키면 출력 시작\n// $ gulp     는 커맨드 출력 X\n\nexport const deploy = gulp.series([build, deployment]);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580222569785
  }
}